schema {
    query: Query
    mutation: Mutation
}


type Profile {
    id: ID!
    id_public: String!
    worker:Worker!  
}
type Worker {    
    id: ID!
    names: String!
    email: String!
    phone: String!
    img: String!    
    birthdate: String!    
    profile: Profile
    profile_id_public: String!
    worker_type:Int
    description: String
    location: Location!
    public: Boolean
    experience: [Experience!]
}

type Experience {
    description: String
    phone: String    
}

type Location {
    route:String
    locality:String
    to_search:String
}
type Job {
    id: ID!
    title: String!
    id_public:String!
    publication_date: String!
    job_type: Int!
    job_type_description: String!
    calls:Int!
    reports:Int!
    state:Boolean!
    location:Location!
    owner: Owner! 
}

type Owner {
    phone :String
}


input AddLocation {
    route:String
    locality:String
    to_search:String
}
input AddExperience {
    description: String
    phone: String    
}
input NewJob {
    title: String!
    id_public:String!
    state:Boolean!
    calls:Int!
    job_type: Int!
    contact_phone: String!
    job_type_description: String!
    location:AddLocation!
}
input UpdateJob {
    state:Boolean
    calls:Int
    reports:Int
    contact_phone: String
    title: String
}
input NewProfile {    
    id_public:String!
    profile_type: Int!
}

input UpdateWorker {
    email: String
    names: String
    birthdate: String    
    phone: String!
    img: String
    worker_type:Int 
    description:String
    location:AddLocation
    public: Boolean
    experience: [AddExperience]
}

type Query {
    profiles(limit: Int!): [Profile]!
    worker(profile_id_public: String, 
        phone: String): Worker!
    workers(limit:Int!,
        search:String,
        worker_type:Int,
        random:Boolean,
        worker_public:Boolean): [Worker]!
    job(id_public:String!): Job!
    jobs(profile_id_public:String,
        state:Boolean,
        search:String,
        limit:Int!,
        job_type:Int,
        random:Boolean): [Job]!
}
type Mutation {
    createProfile(input: NewProfile!): Profile!
    updateWorker(profile_id_public:String!, input: UpdateWorker!): Worker!
    createJob(input: NewJob!): Job!
    updateJob(id_public:String!, input: UpdateJob!): Job!
}